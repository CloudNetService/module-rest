[versions]

# plugins
shadow = "8.3.5"
juppiter = "0.4.0"
spotless = "6.25.0"
nexusPublish = "2.0.0"
checkstyleTools = "10.21.0"

# testing
junit = "5.12.1"
mockito = "5.14.2"
junitLauncher = "1.12.1"
testcontainers = "1.20.4"

# compile time processing
lombok = "1.18.36"

# runtime dependencies
gson = "2.11.0"
jjwt = "0.12.6"
guava = "33.4.0-jre"
annotations = "26.0.1"
unirest = "4.4.5"
caffeine = "3.2.0"

# logging
slf4j = "2.0.16"
logback = "1.5.14"

# validation
expressly = "5.0.0"
jakartaValidationApi = "3.1.0"
hibernateValidator = "8.0.2.Final"

# netty stuff
netty = "5.0.0.Alpha5"
nettyContribHaProxy = "5.0.0.Alpha2"

[libraries]

# compile time processing
lombok = { group = "org.projectlombok", name = "lombok", version.ref = "lombok" }

# netty
nettyHandler = { group = "io.netty", name = "netty5-handler", version.ref = "netty" }
nettyCodecHttp = { group = "io.netty", name = "netty5-codec-http", version.ref = "netty" }
nettyNativeEpoll = { group = "io.netty", name = "netty5-transport-native-epoll", version.ref = "netty" }
nettyNativeKqueue = { group = "io.netty", name = "netty5-transport-native-kqueue", version.ref = "netty" }
nettyContribHaProxy = { group = "io.netty.contrib", name = "netty-codec-haproxy", version.ref = "nettyContribHaProxy" }

# runtime dependencies
guava = { group = "com.google.guava", name = "guava", version.ref = "guava" }
gson = { group = "com.google.code.gson", name = "gson", version.ref = "gson" }
unirest = { group = "com.konghq", name = "unirest-java-core", version.ref = "unirest" }
caffeine = { group = "com.github.ben-manes.caffeine", name = "caffeine", version.ref = "caffeine" }

# jjwt
jjwtApi = { group = "io.jsonwebtoken", name = "jjwt-api", version.ref = "jjwt" }
jjwtImpl = { group = "io.jsonwebtoken", name = "jjwt-impl", version.ref = "jjwt" }
jjwtGson = { group = "io.jsonwebtoken", name = "jjwt-gson", version.ref = "jjwt" }

# junit
junitApi = { group = "org.junit.jupiter", name = "junit-jupiter-api", version.ref = "junit" }
junitParams = { group = "org.junit.jupiter", name = "junit-jupiter-params", version.ref = "junit" }
junitEngine = { group = "org.junit.jupiter", name = "junit-jupiter-engine", version.ref = "junit" }
junitLauncher = { group = "org.junit.platform", name = "junit-platform-launcher", version.ref = "junitLauncher" }

# general testing
mockito = { group = "org.mockito", name = "mockito-junit-jupiter", version.ref = "mockito" }

# testcontainers
testContainers = { group = "org.testcontainers", name = "testcontainers", version.ref = "testcontainers" }
testContainersJunit = { group = "org.testcontainers", name = "junit-jupiter", version.ref = "testcontainers" }

# validation
expressly = { group = "org.glassfish.expressly", name = "expressly", version.ref = "expressly" }
hibernateValidator = { group = "org.hibernate.validator", name = "hibernate-validator", version.ref = "hibernateValidator" }
jakartaValidationApi = { group = "jakarta.validation", name = "jakarta.validation-api", version.ref = "jakartaValidationApi" }

# general
annotations = { group = "org.jetbrains", name = "annotations", version.ref = "annotations" }

# logging
slf4j = { group = "org.slf4j", name = "slf4j-api", version.ref = "slf4j" }
logbackCore = { group = "ch.qos.logback", name = "logback-core", version.ref = "logback" }
logbackClassic = { group = "ch.qos.logback", name = "logback-classic", version.ref = "logback" }

# dummy versions, just here for renovate to detect that there is something to update
checkstyleTools = { group = "com.puppycrawl.tools", name = "checkstyle", version.ref = "checkstyleTools" }


[plugins]

shadow = { id = "com.gradleup.shadow", version.ref = "shadow"}
spotless = { id = "com.diffplug.spotless", version.ref = "spotless" }
juppiter = { id = "eu.cloudnetservice.juppiter", version.ref = "juppiter" }
nexusPublish = { id = "io.github.gradle-nexus.publish-plugin", version.ref = "nexusPublish" }
